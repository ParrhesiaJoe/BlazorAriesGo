!function (e, t) { "object" == typeof exports && "object" == typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define([], t) : "object" == typeof exports ? exports.Aries = t() : e.Aries = t() }(window, (function () { return function (e) { var t = {}; function n(i) { if (t[i]) return t[i].exports; var r = t[i] = { i: i, l: !1, exports: {} }; return e[i].call(r.exports, r, r.exports, n), r.l = !0, r.exports } return n.m = e, n.c = t, n.d = function (e, t, i) { n.o(e, t) || Object.defineProperty(e, t, { enumerable: !0, get: i }) }, n.r = function (e) { "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e, "__esModule", { value: !0 }) }, n.t = function (e, t) { if (1 & t && (e = n(e)), 8 & t) return e; if (4 & t && "object" == typeof e && e && e.__esModule) return e; var i = Object.create(null); if (n.r(i), Object.defineProperty(i, "default", { enumerable: !0, value: e }), 2 & t && "string" != typeof e) for (var r in e) n.d(i, r, function (t) { return e[t] }.bind(null, r)); return i }, n.n = function (e) { var t = e && e.__esModule ? function () { return e.default } : function () { return e }; return n.d(t, "a", t), t }, n.o = function (e, t) { return Object.prototype.hasOwnProperty.call(e, t) }, n.p = "dist/web", n(n.s = 0) }([function (e, t, n) { "use strict"; n.r(t), function (e) { n.d(t, "Framework", (function () { return c })); const i = void 0 !== e && null != e.versions && null != e.versions.node, r = "undefined" != typeof window && void 0 !== window.document; n.p = i ? e.cwd() + "/node_modules/@hyperledger/aries-framework-go/" : r ? "/aries-framework-go/" : void 0; const { loadWorker: o } = n(2); async function a(e, t, n, i, r, o) { return new Promise((a, s) => { const c = setTimeout(e => s(new Error(o)), 25e3); let u = r; "string" == typeof r && (u = JSON.parse(r)); const l = function (e, t, n) { return { id: Math.random().toString(36).slice(2), pkg: e, fn: t, payload: n } }(n, i, u); t.set(l.id, e => { clearTimeout(c), e.isErr && s(new Error(e.errMsg)), a(e.payload) }), e.postMessage(l) }) } async function s(e, t, n) { return new Promise((i, r) => { setTimeout(e => i(), 1e4); 0 === t.length && (t = ["all"]), t.forEach((function (t, o) { void 0 === e.get(t) && e.set(t, new Map), e.get(t).set(n, e => { e.isErr && r(new Error(e.errMsg)), i(e) }) })) }) } const c = class { constructor(e) { return u(e) } }, u = function (e) { if (!e) throw new Error("aries: missing options"); if (!e.assetsPath) throw new Error("aries: missing assets path"); const t = new Map, n = new Map, i = { _test: { _echo: async function (e) { return new Promise((t, i) => { a(r, n, "test", "echo", { echo: e }, "_echo() timed out").then(e => t(e.echo), e => i(new Error("aries: _echo() failed. error: " + e.message))) }) } }, destroy: async function () { var e = await a(r, n, "aries", "Stop", "{}", "timeout while stopping aries"); return r.terminate(), r = null, e }, startNotifier: function (e, n) { if (!e) return void console.error("callback is required to start notifier"); let i = Math.random(), r = !1; const o = e, a = async function* () { for (; ;) { if (r) return void n.forEach((function (e) { t.get(e).delete(i) })); yield await s(t, n, i) } }(); return (async () => { for await (const e of a) e && o(e) })(), () => { r = !0 } }, introduce: { pkgname: "introduce", actions: async function () { return a(r, n, this.pkgname, "Actions", null, "timeout while getting actions") }, acceptProblemReport: function (e) { return a(r, n, this.pkgname, "AcceptProblemReport", e, "timeout while accepting a problem report") }, sendProposal: function (e) { return a(r, n, this.pkgname, "SendProposal", e, "timeout while sending a proposal") }, sendProposalWithOOBInvitation: function (e) { return a(r, n, this.pkgname, "SendProposalWithOOBInvitation", e, "timeout while sending a proposal with OOB invitation") }, sendRequest: function (e) { return a(r, n, this.pkgname, "SendRequest", e, "timeout while sending a request") }, acceptProposalWithOOBInvitation: function (e) { return a(r, n, this.pkgname, "AcceptProposalWithOOBInvitation", e, "timeout while accepting a proposal with OOBInvitation") }, acceptProposal: function (e) { return a(r, n, this.pkgname, "AcceptProposal", e, "timeout while accepting a proposal") }, acceptRequestWithPublicOOBInvitation: function (e) { return a(r, n, this.pkgname, "AcceptRequestWithPublicOOBInvitation", e, "timeout while accepting a request with public OOBInvitation") }, acceptRequestWithRecipients: function (e) { return a(r, n, this.pkgname, "AcceptRequestWithRecipients", e, "timeout while accepting a request with recipients") }, declineProposal: function (e) { return a(r, n, this.pkgname, "DeclineProposal", e, "timeout while declining a proposal") }, declineRequest: function (e) { return a(r, n, this.pkgname, "DeclineRequest", e, "timeout while declining a request") } }, outofband: { pkgname: "outofband", actions: async function () { return a(r, n, this.pkgname, "Actions", null, "timeout while getting actions") }, actionContinue: async function (e) { return a(r, n, this.pkgname, "ActionContinue", e, "timeout action continue") }, actionStop: async function (e) { return a(r, n, this.pkgname, "ActionStop", e, "timeout action continue") }, createInvitation: async function (e) { return a(r, n, this.pkgname, "CreateInvitation", e, "timeout while creating an invitation") }, acceptInvitation: async function (e) { return a(r, n, this.pkgname, "AcceptInvitation", e, "timeout while accepting an invitation") } }, issuecredential: { pkgname: "issuecredential", actions: async function () { return a(r, n, this.pkgname, "Actions", null, "timeout while getting actions") }, sendOffer: async function (e) { return a(r, n, this.pkgname, "SendOffer", e, "timeout while sending an offer") }, sendOfferV3: async function (e) { return a(r, n, this.pkgname, "SendOfferV3", e, "timeout while sending an offer") }, sendProposal: function (e) { return a(r, n, this.pkgname, "SendProposal", e, "timeout while sending a proposal") }, sendProposalV3: function (e) { return a(r, n, this.pkgname, "SendProposalV3", e, "timeout while sending a proposal") }, sendRequest: async function (e) { return a(r, n, this.pkgname, "SendRequest", e, "timeout while sending a request") }, sendRequestV3: async function (e) { return a(r, n, this.pkgname, "SendRequestV3", e, "timeout while sending a request") }, acceptProposal: function (e) { return a(r, n, this.pkgname, "AcceptProposal", e, "timeout while accepting a proposal") }, acceptProposalV3: function (e) { return a(r, n, this.pkgname, "AcceptProposalV3", e, "timeout while accepting a proposal") }, declineProposal: function (e) { return a(r, n, this.pkgname, "DeclineProposal", e, "timeout while declining a proposal") }, acceptOffer: function (e) { return a(r, n, this.pkgname, "AcceptOffer", e, "timeout while accepting an offer") }, acceptProblemReport: function (e) { return a(r, n, this.pkgname, "AcceptProblemReport", e, "timeout while accepting a problem report") }, declineOffer: function (e) { return a(r, n, this.pkgname, "DeclineOffer", e, "timeout while declining an offer") }, negotiateProposal: function (e) { return a(r, n, this.pkgname, "NegotiateProposal", e, "timeout while negotiating proposal") }, negotiateProposalV3: function (e) { return a(r, n, this.pkgname, "NegotiateProposalV3", e, "timeout while negotiating proposal") }, acceptRequest: function (e) { return a(r, n, this.pkgname, "AcceptRequest", e, "timeout while accepting a request") }, acceptRequestV3: function (e) { return a(r, n, this.pkgname, "AcceptRequestV3", e, "timeout while accepting a request") }, declineRequest: function (e) { return a(r, n, this.pkgname, "DeclineRequest", e, "timeout while declining a request") }, acceptCredential: function (e) { return a(r, n, this.pkgname, "AcceptCredential", e, "timeout while accepting a credential") }, declineCredential: function (e) { return a(r, n, this.pkgname, "DeclineCredential", e, "timeout while declining a credential") } }, presentproof: { pkgname: "presentproof", actions: async function () { return a(r, n, this.pkgname, "Actions", null, "timeout while getting actions") }, sendRequestPresentation: async function (e) { return a(r, n, this.pkgname, "SendRequestPresentation", e, "timeout while sending a request presentation") }, sendRequestPresentationV3: async function (e) { return a(r, n, this.pkgname, "SendRequestPresentationV3", e, "timeout while sending a request presentation") }, sendProposePresentation: function (e) { return a(r, n, this.pkgname, "SendProposePresentation", e, "timeout while sending a propose presentation") }, sendProposePresentationV3: function (e) { return a(r, n, this.pkgname, "SendProposePresentationV3", e, "timeout while sending a propose presentation") }, acceptProblemReport: function (e) { return a(r, n, this.pkgname, "AcceptProblemReport", e, "timeout while accepting a problem report") }, acceptRequestPresentation: function (e) { return a(r, n, this.pkgname, "AcceptRequestPresentation", e, "timeout while accepting a request presentation") }, acceptRequestPresentationV3: function (e) { return a(r, n, this.pkgname, "AcceptRequestPresentationV3", e, "timeout while accepting a request presentation") }, acceptProposePresentation: function (e) { return a(r, n, this.pkgname, "AcceptProposePresentation", e, "timeout while accepting a propose presentation") }, acceptProposePresentationV3: function (e) { return a(r, n, this.pkgname, "AcceptProposePresentationV3", e, "timeout while accepting a propose presentation") }, acceptPresentation: function (e) { return a(r, n, this.pkgname, "AcceptPresentation", e, "timeout while accepting a presentation") }, negotiateRequestPresentation: function (e) { return a(r, n, this.pkgname, "NegotiateRequestPresentation", e, "timeout while negotiating a request presentation") }, negotiateRequestPresentationV3: function (e) { return a(r, n, this.pkgname, "NegotiateRequestPresentationV3", e, "timeout while negotiating a request presentation") }, declineRequestPresentation: function (e) { return a(r, n, this.pkgname, "DeclineRequestPresentation", e, "timeout while declining a request presentation") }, declineProposePresentation: function (e) { return a(r, n, this.pkgname, "DeclineProposePresentation", e, "timeout while declining a propose presentation") }, declinePresentation: function (e) { return a(r, n, this.pkgname, "DeclinePresentation", e, "timeout while declining a presentation") } }, didexchange: { pkgname: "didexchange", createInvitation: async function (e) { return a(r, n, this.pkgname, "CreateInvitation", e, "timeout while creating invitation") }, receiveInvitation: async function (e) { return a(r, n, this.pkgname, "ReceiveInvitation", e, "timeout while receiving invitation") }, acceptInvitation: async function (e) { return new Promise((t, i) => { a(r, n, this.pkgname, "AcceptInvitation", e, "timeout while accepting invitation").then(e => t(e), e => i(new Error("failed to accept invitation: " + e.message))) }) }, acceptExchangeRequest: async function (e) { return a(r, n, this.pkgname, "AcceptExchangeRequest", e, "timeout while accepting exchange request") }, createImplicitInvitation: async function (e) { return a(r, n, this.pkgname, "CreateImplicitInvitation", e, "timeout while creating implicit invitation") }, createConnection: async function (e) { return a(r, n, this.pkgname, "CreateConnection", e, "timeout while creating connection") }, removeConnection: async function (e) { return a(r, n, this.pkgname, "RemoveConnection", e, "timeout while removing invitation") }, queryConnectionByID: async function (e) { return a(r, n, this.pkgname, "QueryConnectionByID", e, "timeout while querying connection by ID") }, queryConnections: async function (e) { return a(r, n, this.pkgname, "QueryConnections", e, "timeout while querying connections") } }, connection: { pkgname: "connection", createConnectionV2: async function (e) { return a(r, n, this.pkgname, "CreateConnectionV2", e, "timeout while creating didcomm v2 connection") }, SetConnectionToDIDCommV2: async function (e) { return a(r, n, this.pkgname, "SetConnectionToDIDCommV2", e, "timeout while setting connection to didcomm v2") } }, messaging: { pkgname: "messaging", services: async function () { return a(r, n, this.pkgname, "Services", {}, "timeout while getting list of registered services") }, registerService: async function (e) { return a(r, n, this.pkgname, "RegisterService", e, "timeout while registering service") }, registerHTTPService: async function (e) { return a(r, n, this.pkgname, "RegisterHTTPService", e, "timeout while registering HTTP service") }, unregisterService: async function (e) { return a(r, n, this.pkgname, "UnregisterService", e, "timeout while unregistering service") }, send: async function (e) { return a(r, n, this.pkgname, "Send", e, "timeout while sending new message") }, reply: async function (e) { return a(r, n, this.pkgname, "Reply", e, "timeout while sending reply message") } }, vdr: { pkgname: "vdr", saveDID: async function (e) { return a(r, n, this.pkgname, "SaveDID", e, "timeout while saving did document") }, createDID: async function (e) { return a(r, n, this.pkgname, "CreateDID", e, "timeout while creating did document") }, getDID: async function (e) { return a(r, n, this.pkgname, "GetDID", e, "timeout while retrieving did document") }, resolveDID: async function (e) { return a(r, n, this.pkgname, "ResolveDID", e, "timeout while resolving did document") }, getDIDRecords: async function () { return a(r, n, this.pkgname, "GetDIDRecords", {}, "timeout while retrieving did records") } }, mediator: { pkgname: "mediator", register: async function (e) { return a(r, n, this.pkgname, "Register", e, "timeout while registering router") }, unregister: async function (e) { return a(r, n, this.pkgname, "Unregister", e, "timeout while registering router") }, getConnections: async function () { return a(r, n, this.pkgname, "Connections", "{}", "timeout while fetching router connection id") }, reconnect: async function (e) { return a(r, n, this.pkgname, "Reconnect", e, "timeout while reconnecting to router") }, status: async function (e) { return a(r, n, this.pkgname, "Status", e, "timeout while getting status from router") }, batchPickup: async function (e) { return a(r, n, this.pkgname, "BatchPickup", e, "timeout while performing batch pickup from router") }, reconnectAll: async function () { return a(r, n, this.pkgname, "ReconnectAll", {}, "timeout while reconnecting to mediator") } }, verifiable: { pkgname: "verifiable", validateCredential: async function (e) { return a(r, n, this.pkgname, "ValidateCredential", e, "timeout while validating verifiable credential") }, saveCredential: async function (e) { return a(r, n, this.pkgname, "SaveCredential", e, "timeout while saving verifiable credential") }, getCredential: async function (e) { return a(r, n, this.pkgname, "GetCredential", e, "timeout while retrieving verifiable credential") }, getCredentialByName: async function (e) { return a(r, n, this.pkgname, "GetCredentialByName", e, "timeout while retrieving verifiable credential by name") }, getCredentials: async function () { return a(r, n, this.pkgname, "GetCredentials", {}, "timeout while retrieving verifiable credentials") }, signCredential: async function (e) { return a(r, n, this.pkgname, "SignCredential", e, "timeout while adding proof to credential") }, deriveCredential: async function (e) { return a(r, n, this.pkgname, "DeriveCredential", e, "timeout while deriving credential") }, generatePresentation: async function (e) { return a(r, n, this.pkgname, "GeneratePresentation", e, "timeout while generating verifiable presentation") }, generatePresentationByID: async function (e) { return a(r, n, this.pkgname, "GeneratePresentationByID", e, "timeout while generating verifiable presentation by id") }, savePresentation: async function (e) { return a(r, n, this.pkgname, "SavePresentation", e, "timeout while saving presentation") }, getPresentation: async function (e) { return a(r, n, this.pkgname, "GetPresentation", e, "timeout while retrieving presentation") }, getPresentations: async function () { return a(r, n, this.pkgname, "GetPresentations", {}, "timeout while retrieving presentations") } }, kms: { pkgname: "kms", createKeySet: async function (e) { return a(r, n, this.pkgname, "CreateKeySet", e, "timeout while creating key set") }, importKey: async function (e) { return a(r, n, this.pkgname, "ImportKey", e, "timeout while importing key") } }, vcwallet: { pkgname: "vcwallet", createProfile: async function (e) { return a(r, n, this.pkgname, "CreateProfile", e, "timeout while creating wallet profile") }, updateProfile: async function (e) { return a(r, n, this.pkgname, "UpdateProfile", e, "timeout while updating wallet profile") }, profileExists: async function (e) { return a(r, n, this.pkgname, "ProfileExists", e, "timeout while checking if profile exists") }, open: async function (e) { return a(r, n, this.pkgname, "Open", e, "timeout while opening wallet") }, close: async function (e) { return a(r, n, this.pkgname, "Close", e, "timeout while closing wallet") }, add: async function (e) { return a(r, n, this.pkgname, "Add", e, "timeout while adding content to wallet") }, remove: async function (e) { return a(r, n, this.pkgname, "Remove", e, "timeout while removing content from wallet") }, get: async function (e) { return a(r, n, this.pkgname, "Get", e, "timeout while getting content from wallet") }, getAll: async function (e) { return a(r, n, this.pkgname, "GetAll", e, "timeout getting all contents wallet") }, query: async function (e) { return a(r, n, this.pkgname, "Query", e, "timeout while querying wallet") }, issue: async function (e) { return a(r, n, this.pkgname, "Issue", e, "timeout while issuing from wallet") }, prove: async function (e) { return a(r, n, this.pkgname, "Prove", e, "timeout while proving from wallet") }, verify: async function (e) { return a(r, n, this.pkgname, "Verify", e, "timeout while verifying from wallet") }, derive: async function (e) { return a(r, n, this.pkgname, "Derive", e, "timeout while deriving from wallet") }, createKeyPair: async function (e) { return a(r, n, this.pkgname, "CreateKeyPair", e, "timeout while creating key pair from wallet") }, connect: async function (e) { return a(r, n, this.pkgname, "Connect", e, "timeout while performing DID connect from wallet") }, proposePresentation: async function (e) { return a(r, n, this.pkgname, "ProposePresentation", e, "timeout while proposing presentation from wallet") }, presentProof: async function (e) { return a(r, n, this.pkgname, "PresentProof", e, "timeout while performing present proof from wallet") }, proposeCredential: async function (e) { return a(r, n, this.pkgname, "ProposeCredential", e, "timeout while proposing credential from wallet") }, requestCredential: async function (e) { return a(r, n, this.pkgname, "RequestCredential", e, "timeout while performing request credential from wallet") }, resolveCredentialManifest: async function (e) { return a(r, n, this.pkgname, "ResolveCredentialManifest", e, "timeout while resolving credential manifest from wallet") } }, ld: { pkgname: "ld", addContexts: async function (e) { return a(r, n, this.pkgname, "AddContexts", e, "timeout while adding contexts") }, addRemoteProvider: async function (e) { return a(r, n, this.pkgname, "AddRemoteProvider", e, "timeout while adding remote provider") }, refreshRemoteProvider: async function (e) { return a(r, n, this.pkgname, "RefreshRemoteProvider", e, "timeout while refreshing remote provider") }, deleteRemoteProvider: async function (e) { return a(r, n, this.pkgname, "DeleteRemoteProvider", e, "timeout while removing remote provider") }, getAllRemoteProviders: async function () { return a(r, n, this.pkgname, "GetAllRemoteProviders", {}, "timeout while getting remote providers") }, refreshAllRemoteProviders: async function (e) { return a(r, n, this.pkgname, "RefreshAllRemoteProviders", e, "timeout while refreshing remote providers") } } }; var r = o(n, t, { dir: e.assetsPath, wasm: e.assetsPath + "/aries-js-worker.wasm", wasmJS: e.assetsPath + "/wasm_exec.js" }); return new Promise((o, s) => { const c = setTimeout(e => s(new Error("timout waiting for aries to initialize")), 15e3); t.set("asset-ready", (new Map).set("asset", async t => { clearTimeout(c), a(r, n, "aries", "Start", e, "timeout while starting aries").then(e => o(i), e => s(new Error(e.message))) })) }) } }.call(this, n(1)) }, function (e, t) { var n, i, r = e.exports = {}; function o() { throw new Error("setTimeout has not been defined") } function a() { throw new Error("clearTimeout has not been defined") } function s(e) { if (n === setTimeout) return setTimeout(e, 0); if ((n === o || !n) && setTimeout) return n = setTimeout, setTimeout(e, 0); try { return n(e, 0) } catch (t) { try { return n.call(null, e, 0) } catch (t) { return n.call(this, e, 0) } } } !function () { try { n = "function" == typeof setTimeout ? setTimeout : o } catch (e) { n = o } try { i = "function" == typeof clearTimeout ? clearTimeout : a } catch (e) { i = a } }(); var c, u = [], l = !1, p = -1; function m() { l && c && (l = !1, c.length ? u = c.concat(u) : p = -1, u.length && g()) } function g() { if (!l) { var e = s(m); l = !0; for (var t = u.length; t;) { for (c = u, u = []; ++p < t;)c && c[p].run(); p = -1, t = u.length } c = null, l = !1, function (e) { if (i === clearTimeout) return clearTimeout(e); if ((i === a || !i) && clearTimeout) return i = clearTimeout, clearTimeout(e); try { i(e) } catch (t) { try { return i.call(null, e) } catch (t) { return i.call(this, e) } } }(e) } } function h(e, t) { this.fun = e, this.array = t } function f() { } r.nextTick = function (e) { var t = new Array(arguments.length - 1); if (arguments.length > 1) for (var n = 1; n < arguments.length; n++)t[n - 1] = arguments[n]; u.push(new h(e, t)), 1 !== u.length || l || s(g) }, h.prototype.run = function () { this.fun.apply(null, this.array) }, r.title = "browser", r.browser = !0, r.env = {}, r.argv = [], r.version = "", r.versions = {}, r.on = f, r.addListener = f, r.once = f, r.off = f, r.removeListener = f, r.removeAllListeners = f, r.emit = f, r.prependListener = f, r.prependOnceListener = f, r.listeners = function (e) { return [] }, r.binding = function (e) { throw new Error("process.binding is not supported") }, r.cwd = function () { return "/" }, r.chdir = function (e) { throw new Error("process.chdir is not supported") }, r.umask = function () { return 0 } }, function (e, t, n) { "use strict"; function i(e, t, n) { const i = n.wasmJS, r = n.wasm, o = n.dir + "/worker-impl-web.js", a = new Worker(o + "?wasmJS=" + i + "&wasm=" + r); return a.onmessage = n => { const i = n.data; if ("log_debug" === i.type) return void console.debug(i.msg); if ("log_info" === i.type) return void console.info(i.msg); if ("log_warn" === i.type) return void console.warn(i.msg); if ("log_error" === i.type) return void console.error(i.msg); if (i.topic) { let e = t.get(i.topic); return void 0 === e && (e = t.get("all")), void 0 === e || 0 === e.size ? void console.log("no subscribers found for this topic", i.topic) : void e.forEach(e => { e(i) }) } const r = e.get(i.id); e.delete(i.id), r(i) }, a.onerror = e => { throw new Error("aries: failed to load worker: " + e.message) }, a } n.r(t), n.d(t, "loadWorker", (function () { return i })) }]) }));